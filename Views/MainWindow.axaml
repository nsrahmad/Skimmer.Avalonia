<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Skimmer.Avalonia.ViewModels"
        xmlns:av="clr-namespace:TheArtOfDev.HtmlRenderer.Avalonia;assembly=Avalonia.HtmlRenderer"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:Skimmer.Avalonia.Converters"
		xmlns:views="clr-namespace:Skimmer.Avalonia.Views"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Skimmer.Avalonia.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="Skimmer 0.1">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Window.Resources>
		<conv:ThemeColorConverter x:Key="ThemeColorConverter" />
		<conv:StringToHtmlLinkConverter x:Key="StringToHtmlLinkConverter" />
    </Window.Resources>

    <Grid ColumnDefinitions="*,*" RowDefinitions="Auto,Auto,*">
        <Menu Grid.ColumnSpan="2">
            <MenuItem Command="{Binding UpdateAllFeedsCommand}"
                      Header="_Update All Feeds" />
            <MenuItem Command="{Binding MarkAllAsReadCommand}"
                      Header="_Mark All as read" />
        </Menu>
		<SplitView IsPaneOpen="True"
				   DisplayMode="Inline"
				   OpenPaneLength="200"
				   Grid.Row="1" 
				   Grid.Column="0"
				   Grid.RowSpan="2">
			<SplitView.Pane>
				<views:FeedDirectoryViewControl DataContext="{Binding }"></views:FeedDirectoryViewControl>
			</SplitView.Pane>

			<DataGrid ItemsSource="{Binding SelectedFeed.Items}"
                  IsReadOnly="True"
                  CanUserResizeColumns="True"
                  GridLinesVisibility="All"
                  HeadersVisibility="None"
                  SelectedItem="{Binding SelectedFeedItem}"
                  SelectedIndex="{Binding SelectedFeed.Items[0], Mode=OneWay}">
				<DataGrid.Styles>
					<Style Selector="DataGridCell > TextBlock.isRead">
						<Setter Property="FontWeight" Value="Normal" />
					</Style>
					<Style Selector="DataGridCell > TextBlock.isNotRead">
						<Setter Property="FontWeight" Value="Bold" />
					</Style>
					<Style Selector="DataGrid:focus DataGridCell:current /template/ Grid#FocusVisual">
						<Setter Property="IsVisible" Value="false" />
					</Style>
				</DataGrid.Styles>
				<DataGrid.Columns>
					<DataGridTemplateColumn Width="2*">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Title}"
										   VerticalAlignment="Center"
										   Padding="5 0"
										   RenderOptions.TextRenderingMode="SubpixelAntialias"
										   Classes.isRead="{Binding IsRead}"
										   Classes.isNotRead="{Binding !IsRead}" />
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTextColumn Binding="{Binding LastUpdatedTime, Converter={StaticResource DateConverter}}"
										Width="*" />
				</DataGrid.Columns>
			</DataGrid>
		</SplitView>
        
        <Border Grid.Row="1" Grid.Column="1"
                BorderBrush="Black"
                BorderThickness="1">
            <StackPanel Margin="10">
                <TextBlock Text="{Binding SelectedFeedItem.Title}"
                           TextWrapping="Wrap"
                           FontSize="18" />
				<av:HtmlLabel Text="{Binding SelectedFeedItem.Link, Converter={StaticResource StringToHtmlLinkConverter}}"
                              Padding="8 0"
							  ToolTip.Tip="{Binding SelectedFeedItem.Link}"/>
            </StackPanel>
        </Border>
        <av:HtmlPanel Text="{Binding SelectedFeedItem.Description}"
                      Margin="10"
                      Grid.Row="2" Grid.Column="1" />
    </Grid>
</Window>